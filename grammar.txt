stmt-list: 
     (EOL | EOF) * (stmt (EOL | EOF)) *

stmt: 
     KEYWORD:if LPAREN expr RPAREN stmt KEYWORD:else stmt
     KEYWORD:if LPAREN expr RPAREN stmt
     LCURLY stmt-list RCURLY
     expr

expr
     KEYWORD:var IDENTIFIER EQUAL expr
     IDENTIFIER EQUAL exprs
     comp-expr (TT_AND | TT_OR) comp-expr

comp-expr
     TT_NOT comp-expr
     arith-expr ((EE | NE | LT | GT | LTE | GTE) arith-expr) * 

arith-expr
     term ((PLUS | MINUS) term) *

term
     factor ((MUL | DIV) factor) *

factor
     atom (^ atom) *

################################################ TO DO

atom
     (PLUS | MINUS) atom 
     func-def
     func-call
     INT | FLOAT | IDENTIFIER
     LPAREN expr RPAREN

func-def
     (KEYWORD: function) IDENTIFIER? LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN LCURLY stmt-list RCURLY

func-call
     IDENTIFIER LPAREN (expr (COMMA expr)*)? RPAREN

################################################ END TO DO


